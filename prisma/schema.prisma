// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-arm64-openssl-1.1.x", "darwin-arm64"]
}

generator jsonSchema {
  provider = "prisma-json-schema-generator"
  output   = "./generated/json-schema"
}

model Event {
  eventId           Int            @id @default(autoincrement())
  title             String
  category          CategoryType
  location          String
  eventDurationType DurationType
  startDate         DateTime
  endDate           DateTime
  images            String[]
  summary           String
  description       String
  visibilityType    VisibilityType
  privacyType       PrivacyType
  tickets           Ticket[]
}

model Ticket {
  ticketId    Int         @id @default(autoincrement())
  name        String
  quantity    Int
  price       Float
  startDate   DateTime
  endDate     DateTime
  description String
  event       Event       @relation(references: [eventId], fields: [eventId], onDelete: Cascade)
  eventId     Int
  promotion   Promotion[]
}

model Promotion {
  promotionId    Int           @id @default(autoincrement())
  name           String
  promotionType  PromotionType
  promotionValue Float
  quantity       Int
  startDate      DateTime
  endDate        DateTime
  ticket         Ticket        @relation(references: [ticketId], fields: [ticketId], onDelete: Cascade)
  ticketId       Int
}

enum CategoryType {
  AUTO_BOAT_AIR
  BUSINESS_PROFESSIONAL
  CHARITY_CAUSES
  COMMUNITY_CULTURE
  FAMILY_EDUCATION
  FASHION_BEAUTY
  FILM_MEDIA_ENTERTAINMENT
  FOOD_DRINK
  GOVERNMENT_POLITICS
  HEALTH_WELLNESS
  HOBBIES_SPECIAL_INTEREST
  HOME_LIFESTYLE
  PERFORMING_VISUAL_ARTS
  RELIGION_SPIRITUALITY
  SCHOOL_ACTIVITIES
  SCIENCE_TECHNOLOGY
  SEASONAL_HOLIDAY
  SPORTS_FITNESS
  TRAVEL_OUTDOOR
}

enum DurationType {
  SINGLE
  RECURRING
}

enum VisibilityType {
  DRAFT
  PUBLISHED
}

enum PrivacyType {
  PUBLIC
  PRIVATE
}

enum PromotionType {
  LIMITED
  UNLIMITED
}
